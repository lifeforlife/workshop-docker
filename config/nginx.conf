user nginx;

worker_processes auto;

worker_rlimit_nofile 10240;

# Leave this empty for now
events {}

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
					  '$status $body_bytes_sent "$http_referer" '
					  '"$http_user_agent"';

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''        close;
	}

	upstream grpcservers {
		# The docker endpoint of your grpc servers, you can have multiple here
		server server1:50051;
		server server2:50052;
	}

	server {
		listen 1443 ssl http2;

		# Create a certificate that points to the hostname, e.g. nginx for docker
		# $ openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -subj '/CN=nginx'
		# ssl_certificate     /run/secrets/nginx.cert;
		# ssl_certificate_key /run/secrets/nginx.key;

		location /echo.EchoService {
			# Replace localhost:50051 with the address and port of your gRPC server
			# The 'grpc://' prefix is optional; unencrypted gRPC is the default
			grpc_pass grpcs://grpcservers;
		}
	}
}

server {

        server_name ae-gis.id www.ae-gis.id;

        location /aegis-assets {
                alias /usr/share/nginx/html/assets/;
                try_files $uri $uri =404;
        }

        location / {
                proxy_pass http://127.0.0.1:3000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Host $server_name;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /blog {
                proxy_pass http://128.199.82.49:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Host $server_name;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 500 502 503 504 /error_50x.html;

        location = /error_50x.html {
                root /usr/share/nginx/html;
                internal;
        }

        error_page 404 /custom_404.html;
        location = /custom_404.html {
                root /usr/share/nginx/html;
                internal;
        }
         listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ae-gis.id/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ae-gis.id/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = www.ae-gis.id) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = ae-gis.id) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;

    server_name ae-gis.id www.ae-gis.id;
    return 404; # managed by Certbot

}
